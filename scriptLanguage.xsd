<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://www.projects.science.uu.nl/communicate13/ns/script"
	xmlns:tns="http://www.projects.science.uu.nl/communicate13/ns/script"
	elementFormDefault="qualified"
	version="inbetween">
	<element name="script">
		<complexType>
			<sequence>
				<element name="metadata">
					<annotation>
						<documentation>
							Data that describes the script, but is not part of it.
						</documentation>
					</annotation>
					<complexType>
						<sequence>
							<element name="id" type="string">
								<annotation>
									<documentation>
										The Ideas-approved ID of the script.
									</documentation>
								</annotation>
							</element>
							<element name="name" type="string">
								<annotation>
									<documentation>
										The name of the script.
									</documentation>
								</annotation>
							</element>
							<element name="date">
								<annotation>
									<documentation>
										The date the script was	saved.
									</documentation>
								</annotation>
								<simpleType>
									<union memberTypes="date dateTime" />
								</simpleType>
							</element>
							<element name="description" type="string">
								<annotation>
									<documentation>
										A free-form description of the script.
										Shown when a player starts playing this script.
									</documentation>
								</annotation>
							</element>
							<element name="difficulty">
								<annotation>
									<documentation>
										The difficulty level of the script.
									</documentation>
								</annotation>
								<simpleType>
									<restriction base="string">
										<enumeration value="very_easy" />
										<enumeration value="easy" />
										<enumeration value="medium" />
										<enumeration value="difficult" />
										<enumeration value="very_difficult" />
									</restriction>
								</simpleType>
							</element>
							<element name="feedback" type="boolean">
								<annotation>
									<documentation>
										Whether feedback should be shown during the game.
									</documentation>
								</annotation>
							</element>
							<element name="isSitting" type="boolean">
								<annotation>
									<documentation>
										Whether the sitting variant of the model should be used.
									</documentation>
								</annotation>
							</element>
							<element name="showscore" type="boolean">
								<annotation>
									<documentation>
										Whether the score should be shown on the end screen.
									</documentation>
								</annotation>
							</element>
							<element name="showfeedback" type="boolean">
								<annotation>
									<documentation>
										Whether feedback should be shown on the end screen.
									</documentation>
								</annotation>
							</element>
							<element name="location" type="string">
								<annotation>
									<documentation>
										The background and foreground to be shown in the game.
									</documentation>
								</annotation>
							</element>
							<element name="pet" type="string">
								<annotation>
									<documentation>
										The pet to be shown in the game.
									</documentation>
								</annotation>
							</element>
							<element name="defaultChangeType" minOccurs="0" maxOccurs="1" type="tns:changeType">
								<annotation>
									<documentation>
										The changeType to be selected by default for
										newly created parameter effects.
									</documentation>
								</annotation>
							</element>
							<element name="startEmotion" minOccurs="0" maxOccurs="1" type="IDREF">
								<annotation>
									<documentation>
										The emotion of the model when the game starts.
									</documentation>
								</annotation>
							</element>
							<element name="bannerImage" minOccurs="0" maxOccurs="1" type="tns:mediaItemType">
								<annotation>
									<documentation>
										The image to be displayed in the scenario list.
									</documentation>
								</annotation>
							</element>
							<element name="characterImage" minOccurs="0" maxOccurs="1" type="tns:mediaItemType">
								<annotation>
									<documentation>
										The image to be displayed with the scenario
										description.
									</documentation>
								</annotation>
							</element>
							<element name="model">
								<annotation>
									<documentation>
										A specification of the model to be used as the
										representation of the computer character.
									</documentation>
								</annotation>
								<complexType>
									<attribute name="extid" type="ID" use="required" />
								</complexType>
							</element>
							<element name="parameters">
								<annotation>
									<documentation>
										A list of all parameters referenced in the script.
									</documentation>
								</annotation>
								<complexType>
									<sequence>
										<element name="parameter" maxOccurs="unbounded" minOccurs="0">
											<annotation>
												<documentation>
													A parameter to be referenced in the script.
												</documentation>
											</annotation>
											<complexType>
												<attribute name="id" type="ID" use="required" />
												<attribute name="name" type="string" use="optional">
													<annotation>
														<documentation>
															A human-readable name for the
															parameter.
														</documentation>
													</annotation>
												</attribute>
												<attribute name="initialValue" type="int" use="optional">
													<annotation>
														<documentation>
															The initial value of the parameter.
															When missing, the initial value is 0.
														</documentation>
													</annotation>
												</attribute>
												<attribute name="scored" type="boolean" use="optional">
													<annotation>
														<documentation>
															Whether the parameter will be shown on
															the score screen.
														</documentation>
													</annotation>
												</attribute>
												<attribute name="minimumScore" type="int" use="required">
													<annotation>
														<documentation>
															The minimum attainable value of this parameter
															(according to the script's author).
															Used to calculate the fractional score.
														</documentation>
													</annotation>
												</attribute>
												<attribute name="maximumScore" type="int" use="required">
													<annotation>
														<documentation>
															The maximum attainable value of this parameter
															(according to the script's author).
															Used to calculate the fractional score.
														</documentation>
													</annotation>
												</attribute>
												<attribute name="description" type="string" use="optional">
													<annotation>
														<documentation>
															A human-readable description of the
															parameter.
														</documentation>
													</annotation>
												</attribute>
											</complexType>
										</element>
									</sequence>
								</complexType>
							</element>
							<element name="scoringFunction" type="tns:singleScoringFunctionType">
								<annotation>
									<documentation>
										A function that determines the player's score based	on
										parameter values.
									</documentation>
								</annotation>
							</element>
							<element name="emotions">
								<complexType>
									<attribute name="simpleEmotions" type="boolean" use="required">
										<annotation>
											<documentation>
												Whether emotions are constrained to the one-at-a-time,
												no values model.
											</documentation>
										</annotation>
									</attribute>
									<attribute name="persistentEmotions" type="boolean" use="required">
										<annotation>
											<documentation>
												Whether the emotion(s) should remain active indefinitely.
											</documentation>
										</annotation>
									</attribute>
								</complexType>
							</element>
						</sequence>
					</complexType>
				</element>
				<element name="feedbackForm">
					<annotation>
						<documentation>
							Specification of the parameter-related feedback on the end screen.
						</documentation>
					</annotation>
					<complexType>
						<sequence>
							<element name="parameter" minOccurs="0" maxOccurs="unbounded">
								<complexType>
									<sequence>
										<element name="condition" minOccurs="0" maxOccurs="unbounded">
											<complexType>
												<simpleContent>
													<extension base="string">
														<attribute name="test" type="string" use="required" />
														<attribute name="value" type="int" use="optional" />
														<attribute name="lowerBound" type="int" use="optional" />
														<attribute name="upperBound" type="int" use="optional" />
													</extension>
												</simpleContent>
											</complexType>
										</element>
										<element name="default" minOccurs="0" maxOccurs="1" type="string" />
									</sequence>
									<attribute name="idref" type="IDREF" use="required" />
								</complexType>
							</element>
						</sequence>
					</complexType>
				</element>
				<element name="sequence">
					<complexType>
						<sequence>
							<element name="interleave" minOccurs="0" maxOccurs="unbounded">
								<complexType>
									<sequence>
										<element ref="tns:tree" minOccurs="1" maxOccurs="unbounded" />
									</sequence>
								</complexType>
							</element>
						</sequence>
					</complexType>
				</element>
			</sequence>

			<attribute name="schemaVersion" type="int">
				<annotation>
					<documentation>
						The version of the script structure definition.
					</documentation>
				</annotation>
			</attribute>
		</complexType>

		<key name="parameterid">
			<selector xpath="./tns:metadata/tns:parameters/tns:parameter" />
			<field xpath="@id" />
		</key>
		<key name="computerStatementid">
			<selector xpath=".//tns:computerStatement" />
			<field xpath="@id" />
		</key>
		<key name="playerStatementid">
			<selector xpath=".//tns:playerStatement" />
			<field xpath="@id" />
		</key>
		<key name="computerStatementidOrConversationid">
			<selector xpath=".//tns:computerStatement|.//tns:conversation" />
			<field xpath="@id" />
		</key>
		<key name="playerStatementidOrConversationid">
			<selector xpath=".//tns:playerStatement|.//tns:conversation" />
			<field xpath="@id" />
		</key>
		<key name="anyStatementid">
			<selector xpath=".//tns:playerStatement|.//tns:computerStatement|.//tns:conversation" />
			<field xpath="@id" />
		</key>

		<!-- TODO: any statement allowed? -->
		<keyref name="startid" refer="tns:anyStatementid">
			<selector xpath=".//tns:start" />
			<field xpath="@idref" />
		</keyref>
		<keyref name="parameteridref" refer="tns:parameterid">
			<selector xpath=".//tns:condition|.//tns:parameterEffect|.//tns:paramRef|./tns:feedbackForm/tns:parameter" />
			<field xpath="@idref" />
		</keyref>
		<keyref name="responseid" refer="tns:playerStatementidOrConversationid">
			<selector xpath=".//tns:response" />
			<field xpath="@idref" />
		</keyref>
		<keyref name="nextComputerStatementid" refer="tns:computerStatementidOrConversationid">
			<selector xpath=".//tns:nextComputerStatement" />
			<field xpath="@idref" />
		</keyref>
	</element>

	<simpleType name="changeType">
		<restriction base="string">
			<enumeration value="set" />
			<enumeration value="delta" />
		</restriction>
	</simpleType>

	<complexType name="singleConditionType">
		<group ref="tns:conditionGroup" minOccurs="1" maxOccurs="1" />
	</complexType>
	<complexType name="conditionsType">
		<group ref="tns:conditionGroup" minOccurs="1" maxOccurs="unbounded" />
	</complexType>
	<complexType name="singleScoringFunctionType">
		<group ref="tns:scoringFunctionGroup" minOccurs="1" maxOccurs="1" />
	</complexType>
	<complexType name="scoringFunctionsType">
		<group ref="tns:scoringFunctionGroup" minOccurs="1" maxOccurs="unbounded" />
	</complexType>
	<complexType name="mediaItemType">
		<attribute name="extid" type="string" use="required" />
	</complexType>
	<complexType name="itemType" abstract="true">
		<attribute name="id" type="ID" use="required" />
		<attribute name="possibleEnd" type="boolean" use="optional">
			<annotation>
				<documentation>
					Whether the scenario can end after this statement.
				</documentation>
			</annotation>
		</attribute>
	</complexType>
	<complexType name="statementType" abstract="true">
		<complexContent>
			<extension base="tns:itemType">
				<sequence>
					<element name="text" type="string" />
					<group minOccurs="0" maxOccurs="1" ref="tns:editingDataGroup" />
					<element name="feedback" minOccurs="0" maxOccurs="1" type="string" />
					<element minOccurs="0" maxOccurs="1" ref="tns:media" />
					<element minOccurs="0" maxOccurs="1" name="preconditions"
						type="tns:singleConditionType">
						<annotation>
							<documentation>
								The statement will only be shown when these preconditions evaluate to true.
							</documentation>
						</annotation>
					</element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<complexType name="nextComputerStatementType">
		<attribute name="idref" type="string" use="required" />
	</complexType>

	<group name="conditionGroup">
		<choice>
			<element name="and" type="tns:conditionsType">
				<annotation>
					<documentation>
						A set of conditions, all of which need to be satisfied.
					</documentation>
				</annotation>
			</element>
			<element name="or" type="tns:conditionsType">
				<annotation>
					<documentation>
						A set of conditions, at least one of which needs to be satisfied.
					</documentation>
				</annotation>
			</element>
			<element name="condition">
				<annotation>
					<documentation>
						A condition that applies a test to a parameter value.
					</documentation>
				</annotation>
				<complexType>
					<attribute name="idref" type="string" use="required" />
					<attribute name="test" use="required">
						<simpleType>
							<restriction base="string">
								<enumeration value="equalTo" />
								<enumeration value="notEqualTo" />
								<enumeration value="lessThanEqualTo" />
								<enumeration value="lessThan" />
								<enumeration value="greaterThan" />
								<enumeration value="greaterThanEqualTo" />
							</restriction>
						</simpleType>
					</attribute>
					<attribute name="value" type="string" use="required" />
				</complexType>
			</element>
		</choice>
	</group>
	<group name="scoringFunctionGroup">
		<choice>
			<element name="constant">
				<annotation>
					<documentation>
						A scoring function that yields the given value.
					</documentation>
				</annotation>
				<complexType>
					<attribute name="value" type="int" use="required" />
				</complexType>
			</element>
			<element name="sum" type="tns:scoringFunctionsType">
				<annotation>
					<documentation>A sum of scoring functions.</documentation>
				</annotation>
			</element>
			<element name="scale">
				<annotation>
					<documentation>A scaling of a scoring function.</documentation>
				</annotation>
				<complexType>
					<complexContent>
						<extension base="tns:singleScoringFunctionType">
							<attribute name="scalar" type="int" use="required" />
						</extension>
					</complexContent>
				</complexType>
			</element>
			<element name="paramRef">
				<annotation>
					<documentation>
						A scoring function that yields the value of the given parameter.
					</documentation>
				</annotation>
				<complexType>
					<attribute name="idref" type="IDREF" use="required" />
				</complexType>
			</element>
			<element name="integeredCondition" type="tns:singleConditionType">
				<annotation>
					<documentation>
						A scoring function that converts a condition from Boolean to Int,
						mapping True to 1 and False to 0.
					</documentation>
				</annotation>
			</element>
		</choice>
	</group>
	<group name="nextComputerStatementGroup">
		<choice>
			<element name="nextComputerStatement" type="tns:nextComputerStatementType">
				<annotation>
					<documentation>
						The computer statement that follows this player statement.
					</documentation>
				</annotation>
			</element>
			<element name="nextComputerStatements">
				<complexType>
					<sequence>
						<element name="nextComputerStatement" type="tns:nextComputerStatementType"
							minOccurs="0" maxOccurs="unbounded">
							<annotation>
								<documentation>
									A computer statement that could follow this player statement.
								</documentation>
							</annotation>
						</element>
					</sequence>
				</complexType>
			</element>
		</choice>
	</group>
	<!-- TODO: This doesn't belong in this schema. Can it be separated out? -->
	<group name="editingDataGroup">
		<sequence>
			<element name="position" minOccurs="0" maxOccurs="1">
				<annotation>
					<documentation>
						The position of a shape representing the enclosing element in a graphical
						editor.
					</documentation>
				</annotation>
				<complexType>
					<sequence>
						<element name="x" type="double"></element>
						<element name="y" type="double"></element>
					</sequence>
				</complexType>
			</element>
			<element name="comment" minOccurs="0" maxOccurs="1" type="string" />
		</sequence>
	</group>

	<element name="tree">
		<complexType>
			<sequence>
				<element name="subject" type="string" />
				<group ref="tns:editingDataGroup" />
				<element name="start" minOccurs="1" maxOccurs="unbounded">
					<annotation>
						<documentation>
							An initial node of the tree.
						</documentation>
					</annotation>
					<complexType>
						<attribute name="idref" type="IDREF" use="required" />
					</complexType>
				</element>
				<choice maxOccurs="unbounded" minOccurs="0">
					<element name="computerStatement">
						<annotation>
							<documentation>
								A statement of the computer character.
							</documentation>
						</annotation>
						<complexType>
							<complexContent>
								<extension base="tns:statementType">
									<sequence>
										<element ref="tns:responses" />
									</sequence>
									<attribute name="jumpPoint" type="boolean">
										<annotation>
											<documentation>
												Whether it is possible to jump from this node to a node
												in a different tree in this interleave.
											</documentation>
										</annotation>
									</attribute>
									<attribute name="inits" type="boolean">
										<annotation>
											<documentation>
												If there are different trees in this interleave, whether it is
												possible to jump from this node to a node in one of those trees;
												else whether it is possible to jump from this node to a node in
												a tree in the next interleave.
											</documentation>
										</annotation>
									</attribute>
								</extension>
							</complexContent>
						</complexType>
					</element>
					<element name="playerStatement">
						<annotation>
							<documentation>
								A statement of the player character.
							</documentation>
						</annotation>
						<complexType>
							<complexContent>
								<extension base="tns:statementType">
									<sequence>
										<element name="intents" minOccurs="0" maxOccurs="1">
											<annotation>
												<documentation>
													A list of intents of this statement.
												</documentation>
											</annotation>
											<complexType>
												<sequence>
													<element name="intent" type="string"
														minOccurs="1" maxOccurs="unbounded">
													</element>
												</sequence>
											</complexType>
										</element>
										<element name="parameterEffects" minOccurs="0" maxOccurs="1">
											<annotation>
												<documentation>
													A list of effects of this statement on
													the	parameters.
												</documentation>
											</annotation>
											<complexType>
												<sequence>
													<element name="parameterEffect" maxOccurs="unbounded" minOccurs="0">
														<annotation>
															<documentation>
																An effect of this statement
																on a parameter.
															</documentation>
														</annotation>
														<complexType>
															<attribute name="idref" type="IDREF" use="required" />
															<attribute name="changeType" type="tns:changeType"
																use="required" />
															<attribute name="value" type="string" use="required" />
														</complexType>
													</element>
												</sequence>
											</complexType>
										</element>
										<element name="emotionEffects" minOccurs="0" maxOccurs="1">
											<annotation>
												<documentation>
													A list of effects of this statement on
													the	emotions.
												</documentation>
											</annotation>
											<complexType>
												<sequence>
													<element name="emotionEffect" maxOccurs="unbounded" minOccurs="0">
														<annotation>
															<documentation>
																An effect of this statement
																on an emotion.
															</documentation>
														</annotation>
														<complexType>
															<attribute name="emotionid" type="IDREF" use="required" />
															<attribute name="changeType" type="tns:changeType"
																use="required" />
															<attribute name="value" type="string" use="required" />
															<attribute name="reset" type="boolean" />
														</complexType>
													</element>
												</sequence>
											</complexType>
										</element>
										<group ref="tns:nextComputerStatementGroup" />
									</sequence>
								</extension>
							</complexContent>
						</complexType>
					</element>
					<element name="conversation">
						<annotation>
							<documentation>
								A sequence of statements to be displayed in succession.
							</documentation>
						</annotation>
						<complexType>
							<complexContent>
								<extension base="tns:itemType">
									<sequence>
										<choice maxOccurs="unbounded" minOccurs="1">
											<element name="situationText" type="string" />
											<element name="computerText" type="string" />
											<element name="playerText" type="string" />
										</choice>
										<group ref="tns:editingDataGroup" />
										<element minOccurs="0" maxOccurs="1" ref="tns:media" />
		                                <element ref="tns:responses" />
									</sequence>
								</extension>
							</complexContent>
						</complexType>
					</element>
				</choice>
			</sequence>
			<attribute name="id" type="ID" use="required" />
			<attribute name="optional" type="boolean" use="required">
				<annotation>
					<documentation>
						Whether this tree can be skipped.
					</documentation>
				</annotation>
			</attribute>
		</complexType>
	</element>
	<element name="media">
		<complexType>
			<sequence>
				<element name="visuals">
					<complexType>
						<choice minOccurs="0" maxOccurs="unbounded">
							<element name="video" type="tns:mediaItemType" />
							<element name="image" type="tns:mediaItemType" />
						</choice>
					</complexType>
				</element>
				<element name="audios">
					<complexType>
						<choice minOccurs="0" maxOccurs="unbounded">
							<element name="audio" type="tns:mediaItemType" />
						</choice>
					</complexType>
				</element>
			</sequence>
		</complexType>
	</element>
	<element name="responses">
		<annotation>
			<documentation>
				The possible responses for this statement.
				When this element is empty, it expresses that there are no possible responses.
			</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element minOccurs="0" maxOccurs="unbounded" name="response">
					<complexType>
						<attribute name="idref" type="string" use="required" />
					</complexType>
				</element>
			</sequence>
		</complexType>
	</element>
</schema>