<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema"
	targetNamespace="urn:uurage-temporary"
	xmlns:tns="urn:uurage-temporary"
	elementFormDefault="qualified"
	version="inbetween">
	<element name="scenario">
		<complexType>
			<sequence>
				<element name="metadata">
					<annotation>
						<documentation>
							Data that describes the scenario, but is not part of it.
						</documentation>
					</annotation>
					<complexType>
						<sequence>
							<element name="name" type="string">
								<annotation>
									<documentation>
										The name of the scenario.
									</documentation>
								</annotation>
							</element>
							<element name="date">
								<annotation>
									<documentation>
										The date the scenario was saved.
									</documentation>
								</annotation>
								<simpleType>
									<union memberTypes="date dateTime" />
								</simpleType>
							</element>
							<element name="description" type="string">
								<annotation>
									<documentation>
										A free-form description of the scenario.
										Shown when a player starts playing this scenario.
									</documentation>
								</annotation>
							</element>
							<element name="difficulty">
								<annotation>
									<documentation>
										The difficulty level of the scenario.
									</documentation>
								</annotation>
								<simpleType>
									<restriction base="string">
										<enumeration value="very_easy" />
										<enumeration value="easy" />
										<enumeration value="medium" />
										<enumeration value="difficult" />
										<enumeration value="very_difficult" />
									</restriction>
								</simpleType>
							</element>
							<element name="defaultChangeType" minOccurs="0" maxOccurs="1" type="tns:changeType">
								<annotation>
									<documentation>
										The changeType to be selected by default for
										newly created parameter effects.
									</documentation>
								</annotation>
							</element>
							<element name="definitions">
								<complexType>
									<sequence>
										<element name="characters">
											<complexType>
												<sequence>
													<element name="character" minOccurs="0" maxOccurs="unbounded">
														<complexType>
															<attribute name="id" type="ID" use="required" />
														</complexType>
													</element>
												</sequence>
											</complexType>
										</element>
										<element name="parameters">
											<annotation>
												<documentation>
													A list of all parameters referenced in the scenario.
												</documentation>
											</annotation>
											<complexType>
												<sequence>
													<element name="userDefined">
														<complexType>
															<sequence>
																<element name="parameter" maxOccurs="unbounded" minOccurs="0">
																	<annotation>
																		<documentation>
																			A parameter to be referenced in the scenario.
																		</documentation>
																	</annotation>
																	<complexType>
																		<attribute name="id" type="ID" use="required" />
																		<attribute name="name" type="string" use="optional">
																			<annotation>
																				<documentation>
																					A human-readable name for the
																					parameter.
																				</documentation>
																			</annotation>
																		</attribute>
																		<attribute name="initialValue" type="int" use="optional">
																			<annotation>
																				<documentation>
																					The initial value of the parameter.
																					When missing, the initial value is 0.
																				</documentation>
																			</annotation>
																		</attribute>
																		<attribute name="scored" type="boolean" use="optional">
																			<annotation>
																				<documentation>
																					Whether the parameter will be shown on
																					the score screen.
																				</documentation>
																			</annotation>
																		</attribute>
																		<attribute name="minimumScore" type="int" use="required">
																			<annotation>
																				<documentation>
																					The minimum attainable value of this parameter
																					(according to the scenario's author).
																					Used to calculate the fractional score.
																				</documentation>
																			</annotation>
																		</attribute>
																		<attribute name="maximumScore" type="int" use="required">
																			<annotation>
																				<documentation>
																					The maximum attainable value of this parameter
																					(according to the scenario's author).
																					Used to calculate the fractional score.
																				</documentation>
																			</annotation>
																		</attribute>
																		<attribute name="description" type="string" use="optional">
																			<annotation>
																				<documentation>
																					A human-readable description of the
																					parameter.
																				</documentation>
																			</annotation>
																		</attribute>
																	</complexType>
																</element>
															</sequence>
														</complexType>
													</element>
													<element name="fixed">
														<complexType>
															<sequence>
																<element name="parameter" type="tns:definitionType" maxOccurs="unbounded" minOccurs="0">
																	<annotation>
																		<documentation>
																			A parameter to be referenced in the scenario.
																		</documentation>
																	</annotation>
																</element>
															</sequence>
														</complexType>
													</element>
												</sequence>
											</complexType>
										</element>
										<element name="properties">
											<annotation>
												<documentation>
													A list of all properties referenced in the scenario.
												</documentation>
											</annotation>
											<complexType>
												<sequence>
													<element name="property" type="tns:definitionType" maxOccurs="unbounded" minOccurs="0">
														<annotation>
															<documentation>
																A property to be referenced in the scenario.
															</documentation>
														</annotation>
													</element>
												</sequence>
											</complexType>
										</element>
									</sequence>
								</complexType>
							</element>
							<element ref="tns:propertyValues" />
							<element name="scoringFunction" type="tns:singleScoringFunctionType">
								<annotation>
									<documentation>
										A function that determines the player's score based	on
										parameter values.
									</documentation>
								</annotation>
							</element>
						</sequence>
					</complexType>
				</element>
				<element name="sequence">
					<complexType>
						<sequence>
							<element name="interleave" minOccurs="0" maxOccurs="unbounded">
								<complexType>
									<sequence>
										<element ref="tns:dialogue" minOccurs="1" maxOccurs="unbounded" />
									</sequence>
								</complexType>
							</element>
						</sequence>
					</complexType>
				</element>
			</sequence>

			<attribute name="schemaVersion" type="int" use="required">
				<annotation>
					<documentation>
						The version of the scenario structure definition.
					</documentation>
				</annotation>
			</attribute>
		</complexType>

		<key name="characterid">
			<selector xpath="./tns:metadata/tns:definitions/tns:characters/tns:character" />
			<field xpath="@id" />
		</key>
		<key name="propertyid">
			<selector xpath="./tns:metadata/tns:definitions/tns:properties/tns:property" />
			<field xpath="@id" />
		</key>
		<key name="parameterid">
			<selector xpath="./tns:metadata/tns:definitions/tns:parameters/tns:userDefined/tns:parameter|
					./tns:metadata/tns:definitions/tns:parameters/tns:fixed/tns:parameter" />
			<field xpath="@id" />
		</key>
		<key name="statementid">
			<selector xpath=".//tns:playerStatement|.//tns:computerStatement|.//tns:situationStatement" />
			<field xpath="@id" />
		</key>

		<!-- TODO: any statement allowed? -->
		<keyref name="startidref" refer="tns:statementid">
			<selector xpath=".//tns:start" />
			<field xpath="@idref" />
		</keyref>
		<keyref name="characteridref" refer="tns:characterid">
			<selector xpath=".//tns:computerStatement|.//tns:characterPropertyValue|.//tns:characterParameterEffect" />
			<field xpath="@characteridref" />
		</keyref>
		<keyref name="propertyidref" refer="tns:propertyid">
			<selector xpath="./tns:metadata/tns:propertyValues/tns:propertyValue|
				./tns:metadata/tns:propertyValues/tns:characterPropertyValue|
				.//tns:computerStatement/tns:propertyValues/tns:propertyValue|
				.//tns:computerStatement/tns:propertyValues/tns:characterPropertyValue|
				.//tns:playerStatement/tns:propertyValues/tns:propertyValue|
				.//tns:playerStatement/tns:propertyValues/tns:characterPropertyValue|
				.//tns:situationStatement/tns:propertyValues/tns:propertyValue|
				.//tns:situationStatement/tns:propertyValues/tns:characterPropertyValue" />
			<field xpath="@idref" />
		</keyref>
		<keyref name="parameteridref" refer="tns:parameterid">
			<selector xpath=".//tns:condition|.//tns:parameterEffect|.//tns:characterParameterEffect|.//tns:paramRef" />
			<field xpath="@idref" />
		</keyref>
		<keyref name="responseidref" refer="tns:statementid">
			<selector xpath=".//tns:response" />
			<field xpath="@idref" />
		</keyref>
	</element>

	<simpleType name="changeType">
		<restriction base="string">
			<enumeration value="set" />
			<enumeration value="delta" />
		</restriction>
	</simpleType>

	<complexType name="definitionType">
		<choice>
			<element name="typeString">
				<complexType>
					<sequence>
						<element name="default" type="string"/>
					</sequence>
				</complexType>
			</element>
			<element name="typeInteger">
				<complexType>
					<sequence>
						<element name="default" type="integer"/>
					</sequence>
				</complexType>
			</element>
			<element name="typeBoolean">
				<complexType>
					<sequence>
						<element name="default" type="boolean"/>
					</sequence>
				</complexType>
			</element>
		</choice>
		<attribute name="id" type="ID" use="required" />
	</complexType>
	<complexType name="singleConditionType">
		<group ref="tns:conditionGroup" minOccurs="1" maxOccurs="1" />
	</complexType>
	<complexType name="conditionsType">
		<group ref="tns:conditionGroup" minOccurs="1" maxOccurs="unbounded" />
	</complexType>
	<complexType name="singleScoringFunctionType">
		<group ref="tns:scoringFunctionGroup" minOccurs="1" maxOccurs="1" />
	</complexType>
	<complexType name="scoringFunctionsType">
		<group ref="tns:scoringFunctionGroup" minOccurs="1" maxOccurs="unbounded" />
	</complexType>
	<complexType name="statementType">
		<sequence>
			<element name="text" type="string" />
			<group minOccurs="0" maxOccurs="1" ref="tns:editingDataGroup" />
			<element minOccurs="0" maxOccurs="1" name="preconditions" type="tns:singleConditionType">
				<annotation>
					<documentation>
						The statement will only be shown when these preconditions evaluate to true.
					</documentation>
				</annotation>
			</element>
			<element ref="tns:parameterEffects" />
			<element ref="tns:propertyValues" />
			<element ref="tns:responses" />
		</sequence>
		<attribute name="id" type="ID" use="required" />
		<attribute name="end" type="boolean" use="optional">
			<annotation>
				<documentation>
					Whether the scenario ends after this statement.
				</documentation>
			</annotation>
		</attribute>
	</complexType>

	<group name="conditionGroup">
		<choice>
			<element name="and" type="tns:conditionsType">
				<annotation>
					<documentation>
						A set of conditions, all of which need to be satisfied.
					</documentation>
				</annotation>
			</element>
			<element name="or" type="tns:conditionsType">
				<annotation>
					<documentation>
						A set of conditions, at least one of which needs to be satisfied.
					</documentation>
				</annotation>
			</element>
			<element name="condition">
				<annotation>
					<documentation>
						A condition that applies a test to a parameter value.
					</documentation>
				</annotation>
				<complexType>
					<attribute name="idref" type="string" use="required" />
					<attribute name="test" use="required">
						<simpleType>
							<restriction base="string">
								<enumeration value="equalTo" />
								<enumeration value="notEqualTo" />
								<enumeration value="lessThanEqualTo" />
								<enumeration value="lessThan" />
								<enumeration value="greaterThan" />
								<enumeration value="greaterThanEqualTo" />
							</restriction>
						</simpleType>
					</attribute>
					<attribute name="value" type="string" use="required" />
				</complexType>
			</element>
		</choice>
	</group>
	<group name="scoringFunctionGroup">
		<choice>
			<element name="constant">
				<annotation>
					<documentation>
						A scoring function that yields the given value.
					</documentation>
				</annotation>
				<complexType>
					<attribute name="value" type="int" use="required" />
				</complexType>
			</element>
			<element name="sum" type="tns:scoringFunctionsType">
				<annotation>
					<documentation>A sum of scoring functions.</documentation>
				</annotation>
			</element>
			<element name="scale">
				<annotation>
					<documentation>A scaling of a scoring function.</documentation>
				</annotation>
				<complexType>
					<complexContent>
						<extension base="tns:singleScoringFunctionType">
							<attribute name="scalar" type="int" use="required" />
						</extension>
					</complexContent>
				</complexType>
			</element>
			<element name="paramRef">
				<annotation>
					<documentation>
						A scoring function that yields the value of the given parameter.
					</documentation>
				</annotation>
				<complexType>
					<attribute name="idref" type="IDREF" use="required" />
				</complexType>
			</element>
			<element name="integeredCondition" type="tns:singleConditionType">
				<annotation>
					<documentation>
						A scoring function that converts a condition from Boolean to Int,
						mapping True to 1 and False to 0.
					</documentation>
				</annotation>
			</element>
		</choice>
	</group>
	<!-- TODO: This doesn't belong in this schema. Can it be separated out? -->
	<group name="editingDataGroup">
		<sequence>
			<element name="position" minOccurs="0" maxOccurs="1">
				<annotation>
					<documentation>
						The position of a shape representing the enclosing element in a graphical
						editor.
					</documentation>
				</annotation>
				<complexType>
					<sequence>
						<element name="x" type="double"></element>
						<element name="y" type="double"></element>
					</sequence>
				</complexType>
			</element>
			<element name="comment" minOccurs="0" maxOccurs="1" type="string" />
		</sequence>
	</group>

	<element name="dialogue">
		<complexType>
			<sequence>
				<element name="subject" type="string" />
				<group ref="tns:editingDataGroup" />
				<element name="starts">
					<complexType>
						<sequence>
							<element name="start" minOccurs="1" maxOccurs="unbounded">
								<annotation>
									<documentation>
										An initial statement of the dialogue.
									</documentation>
								</annotation>
								<complexType>
									<attribute name="idref" type="IDREF" use="required" />
								</complexType>
							</element>
						</sequence>
					</complexType>
				</element>
				<element name="statements">
					<complexType>
						<choice maxOccurs="unbounded" minOccurs="0">
							<element name="computerStatement">
								<annotation>
									<documentation>
										A statement of the computer character.
									</documentation>
								</annotation>
								<complexType>
									<complexContent>
										<extension base="tns:statementType">
											<attribute name="jumpPoint" type="boolean">
												<annotation>
													<documentation>
														Whether it is possible to jump from this node to a node
														in a different dialogue in this interleave.
													</documentation>
												</annotation>
											</attribute>
											<attribute name="inits" type="boolean">
												<annotation>
													<documentation>
														If there are different dialogues in this interleave, whether it is
														possible to jump from this node to a node in one of those dialogues;
														else whether it is possible to jump from this node to a node in
														a dialogue in the next interleave.
													</documentation>
												</annotation>
											</attribute>
											<attribute name="characteridref" type="IDREF">
												<annotation>
													<documentation>
														In a multi-character scenario, the character this statement
														belongs to.
													</documentation>
												</annotation>
											</attribute>
										</extension>
									</complexContent>
								</complexType>
							</element>
							<element name="playerStatement" type="tns:statementType">
								<annotation>
									<documentation>
										A statement of the player character.
									</documentation>
								</annotation>
							</element>
							<element name="situationStatement" type="tns:statementType">
								<annotation>
									<documentation>
										A statement about the situation.
									</documentation>
								</annotation>
							</element>
						</choice>
					</complexType>
				</element>
			</sequence>
			<attribute name="id" type="ID" use="required" />
			<attribute name="optional" type="boolean" use="required">
				<annotation>
					<documentation>
						Whether this dialogue can be skipped.
					</documentation>
				</annotation>
			</attribute>
		</complexType>
	</element>
	<element name="parameterEffects">
		<annotation>
			<documentation>
				A list of effects of this statement on
				the	parameters.
			</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element name="userDefined">
					<complexType>
						<sequence>
							<element name="parameterEffect" maxOccurs="unbounded" minOccurs="0">
								<annotation>
									<documentation>
										An effect of this statement on a parameter.
									</documentation>
								</annotation>
								<complexType>
									<attribute name="idref" type="IDREF" use="required" />
									<attribute name="changeType" type="tns:changeType"	use="required" />
									<attribute name="value" type="string" use="required" />
								</complexType>
							</element>
						</sequence>
					</complexType>
				</element>
				<element name="fixed">
					<complexType>
						<choice minOccurs="0" maxOccurs="unbounded" >
							<element name="parameterEffect">
								<annotation>
									<documentation>
										An effect of this statement on a parameter.
									</documentation>
								</annotation>
								<complexType>
									<complexContent>
										<extension base="anyType">
											<attribute name="idref" type="IDREF" use="required" />
											<attribute name="changeType" type="tns:changeType" use="required" />
										</extension>
									</complexContent>
								</complexType>
							</element>
							<element name="characterParameterEffect" >
								<annotation>
									<documentation>
										An effect of this statement on a character parameter.
									</documentation>
								</annotation>
								<complexType>
									<complexContent>
										<extension base="anyType">
											<attribute name="idref" type="IDREF" use="required" />
											<attribute name="characteridref" type="IDREF" use="required" />
											<attribute name="changeType" type="tns:changeType" use="required" />
										</extension>
									</complexContent>
								</complexType>
							</element>
						</choice>
					</complexType>
				</element>
			</sequence>
		</complexType>
	</element>
	<element name="propertyValues">
		<annotation>
			<documentation>
				A list of property values.
			</documentation>
		</annotation>
		<complexType>
			<choice minOccurs="0" maxOccurs="unbounded">
				<element name="propertyValue">
					<annotation>
						<documentation>
							A property value.
						</documentation>
					</annotation>
					<complexType>
						<complexContent>
							<extension base="anyType">
								<attribute name="idref" type="IDREF" use="required" />
							</extension>
						</complexContent>
					</complexType>
				</element>
				<element name="characterPropertyValue">
					<annotation>
						<documentation>
							A character property value.
						</documentation>
					</annotation>
					<complexType>
						<complexContent>
							<extension base="anyType">
								<attribute name="idref" type="IDREF" use="required" />
								<attribute name="characteridref" type="IDREF" use="required" />
							</extension>
						</complexContent>
					</complexType>
				</element>
			</choice>
		</complexType>
		<unique name="propertyValueunique">
			<selector xpath="./tns:propertyValue" />
			<field xpath="@idref" />
		</unique>
		<unique name="characterPropertyValueunique">
			<selector xpath="./tns:characterPropertyValue" />
			<field xpath="@idref" />
			<field xpath="@characteridref" />
		</unique>
	</element>
	<element name="responses">
		<annotation>
			<documentation>
				The possible responses for this statement.
				When this element is empty, it expresses that there are no possible responses.
			</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element minOccurs="0" maxOccurs="unbounded" name="response">
					<complexType>
						<attribute name="idref" type="string" use="required" />
					</complexType>
				</element>
			</sequence>
		</complexType>
	</element>
</schema>