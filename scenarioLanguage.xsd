<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://uudsl.github.io/scenario/namespace"
	xmlns:tns="http://uudsl.github.io/scenario/namespace"
	elementFormDefault="qualified"
	version="4.1.0">
	<element name="scenario">
		<complexType>
			<sequence>
				<element name="definitions">
					<complexType>
						<sequence>
							<element name="characters">
								<complexType>
									<sequence>
										<element name="character" minOccurs="0" maxOccurs="unbounded">
											<complexType>
												<attribute name="id" type="NCName" use="required" />
												<attribute name="name" type="string" use="optional" />
											</complexType>
										</element>
									</sequence>
								</complexType>
							</element>
							<element name="parameters">
								<annotation>
									<documentation>
										A list of all parameters referenced in the scenario.
									</documentation>
								</annotation>
								<complexType>
									<sequence>
										<element name="userDefined">
											<complexType>
												<sequence>
													<element name="parameter" type="tns:definitionType" maxOccurs="unbounded" minOccurs="0">
														<annotation>
															<documentation>
																A user-defined parameter to be referenced in the scenario.
															</documentation>
														</annotation>
													</element>
												</sequence>
											</complexType>
										</element>
										<element name="fixed">
											<complexType>
												<sequence>
													<element name="parameter" type="tns:definitionType" maxOccurs="unbounded" minOccurs="0">
														<annotation>
															<documentation>
																A fixed parameter to be referenced in the scenario.
															</documentation>
														</annotation>
													</element>
												</sequence>
											</complexType>
										</element>
									</sequence>
								</complexType>
							</element>
							<element name="properties">
								<annotation>
									<documentation>
										A list of all properties referenced in the scenario.
									</documentation>
								</annotation>
								<complexType>
									<sequence>
										<element name="property" type="tns:definitionType" maxOccurs="unbounded" minOccurs="0">
											<annotation>
												<documentation>
													A property to be referenced in the scenario.
												</documentation>
											</annotation>
										</element>
									</sequence>
								</complexType>
							</element>
						</sequence>
					</complexType>
				</element>
				<element name="metadata">
					<annotation>
						<documentation>
							Data that describes the scenario, but is not part of it.
						</documentation>
					</annotation>
					<complexType>
						<sequence>
							<element name="name" type="string">
								<annotation>
									<documentation>
										The name of the scenario.
									</documentation>
								</annotation>
							</element>
							<element name="date">
								<annotation>
									<documentation>
										The date the scenario was saved.
									</documentation>
								</annotation>
								<simpleType>
									<union memberTypes="date dateTime" />
								</simpleType>
							</element>
							<element name="description" type="tns:stringWithXMLAttributes">
								<annotation>
									<documentation>
										A free-form description of the scenario.
										Shown when a player starts playing this scenario.
									</documentation>
								</annotation>
							</element>
							<element name="difficulty">
								<annotation>
									<documentation>
										The difficulty level of the scenario.
									</documentation>
								</annotation>
								<simpleType>
									<restriction base="string">
										<enumeration value="very_easy" />
										<enumeration value="easy" />
										<enumeration value="medium" />
										<enumeration value="difficult" />
										<enumeration value="very_difficult" />
									</restriction>
								</simpleType>
							</element>
							<element name="initialParameterValues">
								<annotation>
									<documentation>A list of initial parameter values.</documentation>
								</annotation>
								<complexType>
									<sequence>
										<element name="userDefined" type="tns:simpleParameterValues" />
										<element name="fixed" type="tns:simpleParameterValues" />
									</sequence>
								</complexType>
								<unique name="parameterValueunique">
									<selector xpath=".//tns:parameterValue" />
									<field xpath="@idref" />
								</unique>
								<unique name="characterParameterValueunique">
									<selector xpath=".//tns:characterParameterValue" />
									<field xpath="@idref" />
									<field xpath="@characteridref" />
								</unique>
							</element>
							<element ref="tns:propertyValues" />
						</sequence>
					</complexType>
				</element>
				<element name="sequence">
					<complexType>
						<sequence>
							<element name="interleave" minOccurs="0" maxOccurs="unbounded">
								<complexType>
									<sequence>
										<element ref="tns:dialogue" minOccurs="1" maxOccurs="unbounded" />
									</sequence>
								</complexType>
							</element>
						</sequence>
					</complexType>
				</element>
			</sequence>

			<attribute name="version" type="int" use="optional">
				<annotation>
					<documentation>
						The version of the scenario.
					</documentation>
				</annotation>
			</attribute>
			<attribute name="schemaVersion" type="string" use="required">
				<annotation>
					<documentation>
						The UUDSL version.
					</documentation>
				</annotation>
			</attribute>
			<attribute name="configidref" type="string" use="required"></attribute>
		</complexType>

		<key name="characterid">
			<selector xpath="./tns:definitions/tns:characters/tns:character" />
			<field xpath="@id" />
		</key>
		<key name="propertyid">
			<selector xpath="./tns:definitions/tns:properties/tns:property" />
			<field xpath="@id" />
		</key>
		<key name="parameterid">
			<selector xpath="./tns:definitions/tns:parameters/tns:userDefined/tns:parameter|
					./tns:definitions/tns:parameters/tns:fixed/tns:parameter" />
			<field xpath="@id" />
		</key>
		<key name="statementid">
			<selector xpath=".//tns:playerStatement|.//tns:computerStatement|.//tns:situationStatement" />
			<field xpath="@id" />
		</key>

		<keyref name="startidref" refer="tns:statementid">
			<selector xpath=".//tns:start" />
			<field xpath="@idref" />
		</keyref>
		<keyref name="characteridref" refer="tns:characterid">
			<selector xpath=".//tns:computerStatement|
				.//tns:characterCondition|
				.//tns:characterPropertyValue|
				.//tns:characterParameterValue|
				.//tns:characterParameterEffect" />
			<field xpath="@characteridref" />
		</keyref>
		<keyref name="propertyidref" refer="tns:propertyid">
			<selector xpath=".//tns:propertyValue|.//tns:characterPropertyValue" />
			<field xpath="@idref" />
		</keyref>
		<keyref name="parameteridref" refer="tns:parameterid">
			<selector xpath=".//tns:condition|.//tns:characterCondition|
				.//tns:parameterValue|.//tns:characterParameterValue|
				.//tns:parameterEffect|.//tns:characterParameterEffect" />
			<field xpath="@idref" />
		</keyref>
		<keyref name="responseidref" refer="tns:statementid">
			<selector xpath=".//tns:response" />
			<field xpath="@idref" />
		</keyref>
	</element>

	<complexType name="definitionType">
		<sequence>
			<element name="description" type="tns:stringWithXMLAttributes" minOccurs="0" maxOccurs="1">
				<annotation>
					<documentation>
						A human-readable description of the definition.
					</documentation>
				</annotation>
			</element>
			<element name="type" type="tns:domainDataTypeType" />
		</sequence>
		<attribute name="id" type="NCName" use="required" />
		<attribute name="name" type="string" use="required">
			<annotation>
				<documentation>
					A human-readable name for the definition.
				</documentation>
			</annotation>
		</attribute>
	</complexType>
	<complexType name="domainDataTypeType">
		<choice>
			<element name="string">
				<complexType>
					<sequence>
						<element name="default" type="string" minOccurs="0" maxOccurs="1" />
					</sequence>
				</complexType>
			</element>
			<element name="integer">
				<complexType>
					<sequence>
						<element name="default" type="int" minOccurs="0" maxOccurs="1" />
					</sequence>
				</complexType>
			</element>
			<element name="boolean">
				<complexType>
					<sequence>
						<element name="default" type="boolean" minOccurs="0" maxOccurs="1" />
					</sequence>
				</complexType>
			</element>
			<element name="enumeration">
				<complexType>
					<sequence>
						<element name="option" type="string" minOccurs="1" maxOccurs="unbounded" />
						<element name="default" type="string" minOccurs="0" maxOccurs="1" />
					</sequence>
				</complexType>
			</element>
			<element name="extension">
				<complexType>
					<sequence>
						<element name="equivalentType" type="tns:domainDataTypeType" />
						<any namespace="##other" processContents="lax" />
					</sequence>
				</complexType>
			</element>
		</choice>
	</complexType>
	<complexType name="simpleParameterValues">
		<choice minOccurs="0" maxOccurs="unbounded">
			<element name="parameterValue">
				<complexType>
					<complexContent>
						<extension base="anyType">
							<attribute name="idref" type="NCName" use="required" />
						</extension>
					</complexContent>
				</complexType>
			</element>
			<element name="characterParameterValue">
				<complexType>
					<complexContent>
						<extension base="anyType">
							<attribute name="idref" type="NCName" use="required" />
							<attribute name="characteridref" type="NCName" use="required" />
						</extension>
					</complexContent>
				</complexType>
			</element>
		</choice>
	</complexType>
	<complexType name="singleConditionType">
		<group ref="tns:conditionGroup" minOccurs="1" maxOccurs="1" />
	</complexType>
	<complexType name="conditionsType">
		<group ref="tns:conditionGroup" minOccurs="1" maxOccurs="unbounded" />
	</complexType>
	<complexType name="statementType">
		<sequence>
			<element name="text" type="tns:stringWithXMLAttributes" />
			<element minOccurs="0" maxOccurs="1" ref="tns:editingData" />
			<element minOccurs="0" maxOccurs="1" name="preconditions" type="tns:singleConditionType">
				<annotation>
					<documentation>
						The statement will only be shown when these preconditions evaluate to true.
					</documentation>
				</annotation>
			</element>
			<element ref="tns:parameterEffects" />
			<element ref="tns:propertyValues" />
			<element name="responses">
				<annotation>
					<documentation>
						The possible responses for this statement.
						When this element is empty, it expresses that there are no possible responses.
					</documentation>
				</annotation>
				<complexType>
					<sequence>
						<element minOccurs="0" maxOccurs="unbounded" name="response">
							<complexType>
								<attribute name="idref" type="NCName" use="required" />
							</complexType>
						</element>
					</sequence>
				</complexType>
			</element>
		</sequence>
		<attribute name="id" type="NCName" use="required" />
		<attribute name="end" type="boolean" use="optional">
			<annotation>
				<documentation>
					Whether the scenario ends after this statement.
				</documentation>
			</annotation>
		</attribute>
	</complexType>
	<complexType name="stringWithXMLAttributes">
		<simpleContent>
			<extension base="string">
				<anyAttribute namespace="http://www.w3.org/XML/1998/namespace" processContents="lax" />
			</extension>
		</simpleContent>
	</complexType>
	<simpleType name="relationalOperator">
		<restriction base="string">
			<enumeration value="equalTo" />
			<enumeration value="notEqualTo" />
			<enumeration value="lessThanEqualTo" />
			<enumeration value="lessThan" />
			<enumeration value="greaterThan" />
			<enumeration value="greaterThanEqualTo" />
		</restriction>
	</simpleType>

	<group name="conditionGroup">
		<choice>
			<element name="and" type="tns:conditionsType">
				<annotation>
					<documentation>
						A set of conditions, all of which need to be satisfied.
					</documentation>
				</annotation>
			</element>
			<element name="or" type="tns:conditionsType">
				<annotation>
					<documentation>
						A set of conditions, at least one of which needs to be satisfied.
					</documentation>
				</annotation>
			</element>
			<element name="condition">
				<annotation>
					<documentation>
						A condition that checks a parameter value and the value of the parameter referenced with an operator.
					</documentation>
				</annotation>
				<complexType>
					<complexContent>
						<extension base="anyType">
							<attribute name="idref" type="NCName" use="required" />
							<attribute name="operator" type="tns:relationalOperator" use="required">
							</attribute>
						</extension>
					</complexContent>
				</complexType>
			</element>
			<element name="characterCondition">
				<annotation>
					<documentation>
						A condition that checks a parameter value and the value of the parameter of the character referenced with an operator.
					</documentation>
				</annotation>
				<complexType>
					<complexContent>
						<extension base="anyType">
							<attribute name="idref" type="NCName" use="required" />
							<attribute name="characteridref" type="NCName" use="required" />
							<attribute name="operator" type="tns:relationalOperator" use="required">
							</attribute>
						</extension>
					</complexContent>
				</complexType>
			</element>
		</choice>
	</group>

	<!-- TODO: This doesn't belong in this schema. Can it be separated out? -->
	<element name="editingData">
		<annotation>
			<documentation>
				This element contains data that is useful for graphical representation and documentation of the scenario
			</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element name="position" minOccurs="0" maxOccurs="1">
					<annotation>
						<documentation>
							The position of a shape representing the enclosing element in a graphical editor.
						</documentation>
					</annotation>
					<complexType>
						<sequence>
							<element name="x" type="double"></element>
							<element name="y" type="double"></element>
						</sequence>
					</complexType>
				</element>
				<element name="comment" minOccurs="0" maxOccurs="1" type="tns:stringWithXMLAttributes" />
			</sequence>
		</complexType>
	</element>

	<element name="dialogue">
		<complexType>
			<sequence>
				<element name="subject" type="string" />
				<element ref="tns:editingData" />
				<element name="starts">
					<complexType>
						<sequence>
							<element name="start" minOccurs="1" maxOccurs="unbounded">
								<annotation>
									<documentation>
										An initial statement of the dialogue.
									</documentation>
								</annotation>
								<complexType>
									<attribute name="idref" type="NCName" use="required" />
								</complexType>
							</element>
						</sequence>
					</complexType>
				</element>
				<element name="statements">
					<complexType>
						<choice maxOccurs="unbounded" minOccurs="0">
							<element name="computerStatement">
								<annotation>
									<documentation>
										A statement of the computer character.
									</documentation>
								</annotation>
								<complexType>
									<complexContent>
										<extension base="tns:statementType">
											<attribute name="jumpPoint" type="boolean">
												<annotation>
													<documentation>
														Whether it is possible to jump from this node to a node
														in a different dialogue in this interleave.
													</documentation>
												</annotation>
											</attribute>
											<attribute name="inits" type="boolean">
												<annotation>
													<documentation>
														If there are different dialogues in this interleave, whether it is
														possible to jump from this node to a node in one of those dialogues;
														else whether it is possible to jump from this node to a node in
														a dialogue in the next interleave.
													</documentation>
												</annotation>
											</attribute>
											<attribute name="characteridref" type="NCName">
												<annotation>
													<documentation>
														In a multi-character scenario, the character this statement
														belongs to.
													</documentation>
												</annotation>
											</attribute>
										</extension>
									</complexContent>
								</complexType>
							</element>
							<element name="playerStatement" type="tns:statementType">
								<annotation>
									<documentation>
										A statement of the player character.
									</documentation>
								</annotation>
							</element>
							<element name="situationStatement" type="tns:statementType">
								<annotation>
									<documentation>
										A statement about the situation.
									</documentation>
								</annotation>
							</element>
						</choice>
					</complexType>
				</element>
			</sequence>
			<attribute name="id" type="NCName" use="required" />
			<attribute name="optional" type="boolean" use="required">
				<annotation>
					<documentation>
						Whether this dialogue can be skipped.
					</documentation>
				</annotation>
			</attribute>
		</complexType>
	</element>
	<element name="parameterEffects">
		<annotation>
			<documentation>
				A list of effects of this statement on
				the	parameters.
			</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element name="userDefined">
					<complexType>
						<sequence>
							<element ref="tns:parameterEffect" minOccurs="0" maxOccurs="unbounded"/>
						</sequence>
					</complexType>
				</element>
				<element name="fixed">
					<complexType>
						<choice minOccurs="0" maxOccurs="unbounded" >
							<element ref="tns:parameterEffect"/>
							<element name="characterParameterEffect" >
								<annotation>
									<documentation>
										An effect of this statement on a character parameter.
									</documentation>
								</annotation>
								<complexType>
									<complexContent>
										<extension base="anyType">
											<attribute name="idref" type="NCName" use="required" />
											<attribute name="characteridref" type="NCName" use="required" />
											<attribute name="operator" type="tns:assignmentOperator" use="required" />
										</extension>
									</complexContent>
								</complexType>
							</element>
						</choice>
					</complexType>
				</element>
			</sequence>
		</complexType>
	</element>
	<element name="parameterEffect">
		<annotation>
			<documentation>
				An effect of this statement on a parameter.
			</documentation>
		</annotation>
		<complexType>
			<complexContent>
				<extension base="anyType">
					<attribute name="idref" type="NCName" use="required" />
					<attribute name="operator" type="tns:assignmentOperator" use="required" />
				</extension>
			</complexContent>
		</complexType>
	</element>
	<simpleType name="assignmentOperator">
		<restriction base="string">
			<enumeration value="assign" />
			<enumeration value="addAssign" />
			<enumeration value="subtractAssign" />
		</restriction>
	</simpleType>
	<element name="propertyValues">
		<annotation>
			<documentation>
				A list of property values.
			</documentation>
		</annotation>
		<complexType>
			<choice minOccurs="0" maxOccurs="unbounded">
				<element name="propertyValue">
					<annotation>
						<documentation>
							A property value.
						</documentation>
					</annotation>
					<complexType>
						<complexContent>
							<extension base="anyType">
								<attribute name="idref" type="NCName" use="required" />
							</extension>
						</complexContent>
					</complexType>
				</element>
				<element name="characterPropertyValue">
					<annotation>
						<documentation>
							A character property value.
						</documentation>
					</annotation>
					<complexType>
						<complexContent>
							<extension base="anyType">
								<attribute name="idref" type="NCName" use="required" />
								<attribute name="characteridref" type="NCName" use="required" />
							</extension>
						</complexContent>
					</complexType>
				</element>
			</choice>
		</complexType>
		<unique name="propertyValueunique">
			<selector xpath="./tns:propertyValue" />
			<field xpath="@idref" />
		</unique>
		<unique name="characterPropertyValueunique">
			<selector xpath="./tns:characterPropertyValue" />
			<field xpath="@idref" />
			<field xpath="@characteridref" />
		</unique>
	</element>
</schema>